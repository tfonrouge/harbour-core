diff --strip-trailing-cr -urN minixml.orig/config.h minixml/config.h
--- minixml.orig/config.h	2014-01-04 21:50:06.000000000 +0000
+++ minixml/config.h	2017-10-07 11:59:44.000000000 +0000
@@ -18,12 +18,30 @@
  * Include necessary headers...
  */
 
-#include <stdio.h>
-#include <stdlib.h>
-#include <string.h>
-#include <stdarg.h>
-#include <ctype.h>
+#include "hbapi.h"
+#include "hb_io.h"
 
+#if defined ( _MSC_VER )
+#define close      _close
+#define open       _open
+#define read       _read
+#undef snprintf
+#define snprintf   _snprintf
+#define strdup     _strdup
+#undef vsnprintf
+#define vsnprintf  _vsnprintf
+#define write      _write
+#endif
+
+#ifdef HB_USE_CORE_PRINTF
+#  define HAVE_SNPRINTF  1
+#  undef snprintf
+#  define snprintf  hb_snprintf
+
+#  define HAVE_VSNPRINTF  1
+#  undef vsnprintf
+#  define vsnprintf  hb_vsnprintf
+#endif
 
 /*
  * Version number...
@@ -36,36 +54,46 @@
  * Inline function support...
  */
 
+#if 0
 #define inline
+#endif
 
 
 /*
  * Long long support...
  */
 
+#if 0
 #undef HAVE_LONG_LONG
+#endif
 
 
 /*
  * Do we have the snprintf() and vsnprintf() functions?
  */
 
+#if 0
 #undef HAVE_SNPRINTF
 #undef HAVE_VSNPRINTF
+#endif
 
 
 /*
  * Do we have the strXXX() functions?
  */
 
+#if 0
 #undef HAVE_STRDUP
+#endif
 
 
 /*
  * Do we have threading support?
  */
 
+#if 0
 #undef HAVE_PTHREAD_H
+#endif
 
 
 /*
@@ -74,6 +102,7 @@
 
 #  ifndef HAVE_STRDUP
 extern char	*_mxml_strdup(const char *);
+#    undef strdup
 #    define strdup _mxml_strdup
 #  endif /* !HAVE_STRDUP */
 
@@ -82,11 +111,13 @@
 
 #  ifndef HAVE_SNPRINTF
 extern int	_mxml_snprintf(char *, size_t, const char *, ...);
+#    undef snprintf
 #    define snprintf _mxml_snprintf
 #  endif /* !HAVE_SNPRINTF */
 
 #  ifndef HAVE_VSNPRINTF
 extern int	_mxml_vsnprintf(char *, size_t, const char *, va_list);
+#    undef vsnprintf
 #    define vsnprintf _mxml_vsnprintf
 #  endif /* !HAVE_VSNPRINTF */
 
diff --strip-trailing-cr -urN minixml.orig/mxml-file.c minixml/mxml-file.c
--- minixml.orig/mxml-file.c	2016-06-13 00:51:16.000000000 +0000
+++ minixml/mxml-file.c	2017-03-21 21:20:46.000000000 +0000
@@ -71,7 +71,7 @@
 static int		mxml_get_entity(mxml_node_t *parent, void *p,
 			                int *encoding,
 					_mxml_getc_cb_t getc_cb);
-static inline int	mxml_isspace(int ch)
+static _HB_INLINE_ int	mxml_isspace(int ch)
 			{
 			  return (ch == ' ' || ch == '\t' || ch == '\r' ||
 			          ch == '\n');
@@ -294,8 +294,14 @@
     return (-1);
 
   if (col > 0)
+  {
+#ifdef _EOL_CRLF
+    if (mxml_fd_putc('\r', &buf) < 0)
+      return (-1);
+#endif
     if (mxml_fd_putc('\n', &buf) < 0)
       return (-1);
+  }
 
  /*
   * Flush and return...
@@ -333,8 +339,14 @@
     return (-1);
 
   if (col > 0)
+  {
+#ifdef _EOL_CRLF
+    if (putc('\r', fp) < 0)
+      return (-1);
+#endif
     if (putc('\n', fp) < 0)
       return (-1);
+  }
 
  /*
   * Return 0 (success)...
@@ -381,7 +393,12 @@
     return (-1);
 
   if (col > 0)
+  {
+#ifdef _EOL_CRLF
+    mxml_string_putc('\r', ptr);
+#endif
     mxml_string_putc('\n', ptr);
+  }
 
  /*
   * Nul-terminate the buffer...
@@ -1021,7 +1038,7 @@
   while ((bytes = read(buf->fd, buf->buffer, sizeof(buf->buffer))) < 0)
 #ifdef EINTR
     if (errno != EAGAIN && errno != EINTR)
-#else
+#elif defined( EAGAIN )
     if (errno != EAGAIN)
 #endif /* EINTR */
       return (-1);
@@ -2770,6 +2787,10 @@
 
 	    if (global->wrap > 0 && (col + width) > global->wrap)
 	    {
+#ifdef _EOL_CRLF
+	    if ((*putc_cb)('\r', p) < 0)
+	      return (-1);
+#endif
 	      if ((*putc_cb)('\n', p) < 0)
 		return (-1);
 
@@ -2878,6 +2899,10 @@
 	  {
 	    if (global->wrap > 0 && col > global->wrap)
 	    {
+#ifdef _EOL_CRLF
+	    if ((*putc_cb)('\r', p) < 0)
+	      return (-1);
+#endif
 	      if ((*putc_cb)('\n', p) < 0)
 		return (-1);
 
@@ -2901,6 +2926,14 @@
 	  {
 	    if (global->wrap > 0 && col > global->wrap)
 	    {
+#ifdef _EOL_CRLF
+	    if ((*putc_cb)('\r', p) < 0)
+	      return (-1);
+#endif
+#ifdef _EOL_CRLF
+	    if ((*putc_cb)('\r', p) < 0)
+	      return (-1);
+#endif
 	      if ((*putc_cb)('\n', p) < 0)
 		return (-1);
 
diff --strip-trailing-cr -urN minixml.orig/mxml-node.c minixml/mxml-node.c
--- minixml.orig/mxml-node.c	2016-06-11 20:51:49.000000000 +0000
+++ minixml/mxml-node.c	2017-10-07 11:27:21.000000000 +0000
@@ -178,10 +178,6 @@
 void
 mxmlDelete(mxml_node_t *node)		/* I - Node to delete */
 {
-  mxml_node_t	*current,		/* Current node */
-		*next;			/* Next node */
-
-
 #ifdef DEBUG
   fprintf(stderr, "mxmlDelete(node=%p)\n", node);
 #endif /* DEBUG */
@@ -203,43 +199,11 @@
   * Delete children...
   */
 
-  for (current = node->child; current; current = next)
+  while (node->child)
   {
-   /*
-    * Get the next node...
-    */
-
-    if ((next = current->child) != NULL)
-    {
-     /*
-      * Free parent nodes after child nodes have been freed...
-      */
-
-      current->child = NULL;
-      continue;
-    }
-
-    if ((next = current->next) == NULL)
-    {
-      mxml_node_t *temp = current->parent;
-					/* Pointer to parent node */
-
-      if (temp == node)
-      {
-       /*
-        * Got back to the top node...
-        */
-
-        next = NULL;
-      }
-      else if ((next = temp->next) == NULL)
-      {
-	if ((next = temp->parent) == node)
-	  next = NULL;
-      }
-    }
-
-    mxml_free(current);
+    mxml_node_t *child = node->child;
+    mxmlRemove(child);
+    mxmlRelease(child);
   }
 
  /*
diff --strip-trailing-cr -urN minixml.orig/mxml-set.c minixml/mxml-set.c
--- minixml.orig/mxml-set.c	2014-01-04 21:50:06.000000000 +0000
+++ minixml/mxml-set.c	2017-10-07 11:27:31.000000000 +0000
@@ -25,7 +25,7 @@
 /*
  * 'mxmlSetCDATA()' - Set the element name of a CDATA node.
  *
- * The node is not changed if it (or its first child) is not a CDATA element node.
+ * The node is not changed if it is not a CDATA element node.
  *
  * @since Mini-XML 2.3@
  */
@@ -38,12 +38,6 @@
   * Range check input...
   */
 
-  if (node && node->type == MXML_ELEMENT &&
-      strncmp(node->value.element.name, "![CDATA[", 8) &&
-      node->child && node->child->type == MXML_ELEMENT &&
-      !strncmp(node->child->value.element.name, "![CDATA[", 8))
-    node = node->child;
-
   if (!node || node->type != MXML_ELEMENT || !data ||
       strncmp(node->value.element.name, "![CDATA[", 8))
     return (-1);
@@ -64,7 +58,7 @@
 /*
  * 'mxmlSetCustom()' - Set the data and destructor of a custom data node.
  *
- * The node is not changed if it (or its first child) is not a custom node.
+ * The node is not changed if it is not a custom node.
  *
  * @since Mini-XML 2.1@
  */
@@ -79,10 +73,6 @@
   * Range check input...
   */
 
-  if (node && node->type == MXML_ELEMENT &&
-      node->child && node->child->type == MXML_CUSTOM)
-    node = node->child;
-
   if (!node || node->type != MXML_CUSTOM)
     return (-1);
 
@@ -133,7 +123,7 @@
 /*
  * 'mxmlSetInteger()' - Set the value of an integer node.
  *
- * The node is not changed if it (or its first child) is not an integer node.
+ * The node is not changed if it is not an integer node.
  */
 
 int					/* O - 0 on success, -1 on failure */
@@ -144,10 +134,6 @@
   * Range check input...
   */
 
-  if (node && node->type == MXML_ELEMENT &&
-      node->child && node->child->type == MXML_INTEGER)
-    node = node->child;
-
   if (!node || node->type != MXML_INTEGER)
     return (-1);
 
@@ -164,7 +150,7 @@
 /*
  * 'mxmlSetOpaque()' - Set the value of an opaque node.
  *
- * The node is not changed if it (or its first child) is not an opaque node.
+ * The node is not changed if it is not an opaque node.
  */
 
 int					/* O - 0 on success, -1 on failure */
@@ -175,10 +161,6 @@
   * Range check input...
   */
 
-  if (node && node->type == MXML_ELEMENT &&
-      node->child && node->child->type == MXML_OPAQUE)
-    node = node->child;
-
   if (!node || node->type != MXML_OPAQUE || !opaque)
     return (-1);
 
@@ -198,7 +180,7 @@
 /*
  * 'mxmlSetReal()' - Set the value of a real number node.
  *
- * The node is not changed if it (or its first child) is not a real number node.
+ * The node is not changed if it is not a real number node.
  */
 
 int					/* O - 0 on success, -1 on failure */
@@ -209,10 +191,6 @@
   * Range check input...
   */
 
-  if (node && node->type == MXML_ELEMENT &&
-      node->child && node->child->type == MXML_REAL)
-    node = node->child;
-
   if (!node || node->type != MXML_REAL)
     return (-1);
 
@@ -229,7 +207,7 @@
 /*
  * 'mxmlSetText()' - Set the value of a text node.
  *
- * The node is not changed if it (or its first child) is not a text node.
+ * The node is not changed if it is not a text node.
  */
 
 int					/* O - 0 on success, -1 on failure */
@@ -241,10 +219,6 @@
   * Range check input...
   */
 
-  if (node && node->type == MXML_ELEMENT &&
-      node->child && node->child->type == MXML_TEXT)
-    node = node->child;
-
   if (!node || node->type != MXML_TEXT || !string)
     return (-1);
 
@@ -265,7 +239,7 @@
 /*
  * 'mxmlSetTextf()' - Set the value of a text node to a formatted string.
  *
- * The node is not changed if it (or its first child) is not a text node.
+ * The node is not changed if it is not a text node.
  */
 
 int					/* O - 0 on success, -1 on failure */
@@ -281,10 +255,6 @@
   * Range check input...
   */
 
-  if (node && node->type == MXML_ELEMENT &&
-      node->child && node->child->type == MXML_TEXT)
-    node = node->child;
-
   if (!node || node->type != MXML_TEXT || !format)
     return (-1);
 
diff --strip-trailing-cr -urN minixml.orig/mxml-string.c minixml/mxml-string.c
--- minixml.orig/mxml-string.c	2014-01-05 03:25:07.000000000 +0000
+++ minixml/mxml-string.c	2017-10-07 11:36:41.000000000 +0000
@@ -20,6 +20,9 @@
 
 #include "config.h"
 
+#ifndef HAVE_VSNPRINTF
+#  include <ctype.h>
+#endif
 
 /*
  * The va_copy macro is part of C99, but many compilers don't implement it.
diff --strip-trailing-cr -urN minixml.orig/mxml.h minixml/mxml.h
--- minixml.orig/mxml.h	2016-06-12 21:16:14.000000000 +0000
+++ minixml/mxml.h	2017-10-07 12:05:07.000000000 +0000
@@ -24,12 +24,20 @@
 /*
  * Include necessary headers...
  */
-
 #  include <stdio.h>
 #  include <stdlib.h>
 #  include <string.h>
 #  include <ctype.h>
-#  include <errno.h>
+#  if defined( UNDER_CE ) || defined( __CEGCC__ ) || defined( __MINGW32CE__ ) || \
+      defined( _WINCE )
+#     include <io.h>
+#     if ! defined( UNDER_CE )
+#        define UNDER_CE
+#     endif
+#     define strerror( e )  ""
+#  else
+#     include <errno.h>
+#  endif
 
 
 /*
